#!/bin/bash
# ant doohicky for CeeFIT, I wish I knew how to write shell scripts ... :P  Nah, C++ is bad enough ...

DEBUG_BUILD=-Ddebug.mode=false
RELEASE_BUILD=-Drelease.mode=false
DEBUG_ANT_FLAG=
USE_GPP=

ANT_HOME=./lib/apache-ant-1.6.5

while [ "$1" != "" ]; do
    case $1 in
        -h | -help )            shift
                                echo "Ant script for CeeFIT"
                                echo "usage:  ant [-debugAnt] [{build.properties overrides}] {ant param(s)}"
                                echo "           -debugAnt     : Tells ant to print out debugging and"
                                echo "                           diagnostic information"
                                echo ""
                                echo "         build.properties overrides:"
                                echo "           -fastCompile  : Force ant to build CeeFIT with no frills"
                                echo "                           (overrides build.properties)"
                                echo "           -debug        : Force ant to build CeeFIT with debugging"
                                echo "                           information (overrides build.properties)"
                                echo "           -release      : Force ant to build CeeFIT with optimizations"
                                echo "                           enabled (overrides build.properties)"
                                echo "           -msvc         : Force ant to build using MSVC compiler and"
                                echo "                           linker (overrides build.properties)"
                                echo "           -g++          : Force ant to build using GCC's g++ compiler"
                                echo "                           and linker (overrides build.properties)"
                                echo ""
                                echo "For GCC, the following variables are expected to be set:"
                                echo "  PATH         :  Should include any tools or executables the build"
                                echo "                  will require."
                                echo "  GCC_BIN      :  The path to gcc, g++ and other GCC C++ tools."
                                echo "  GCC_LIB      :  The lib folder containing standard C/C++ libraries"
                                echo "  GCC_INCLUDE  :  The include folder containing standard C/C++ headers "
                                echo ""
                                echo "  normal Ant help follows ..."
                                echo ""
				                        bash $ANT_HOME/bin/ant -help 
				                        exit
                                ;;
        -debugAnt )    		      shift
				                        DEBUG_ANT_FLAG="-debug -Ddebug.ant.flag=true"
                                ;;
        -debug )    		        shift
				                        DEBUG_BUILD=-Ddebug.mode=true
				                        RELEASE_BUILD=-Drelease.mode=false
                                ;;
        -release )    		      shift
				                        DEBUG_BUILD=-Ddebug.mode=false
				                        RELEASE_BUILD=-Drelease.mode=true
                                ;;
        -fastCompile )    	    shift
				                        DEBUG_BUILD=-Ddebug.mode=false
				                        RELEASE_BUILD=-Drelease.mode=false
                                ;;
        -g++ )    		          shift
				                        USE_GPP="-Dwhich.compiler=g++ -Dwhich.linker=g++"
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     break
    esac    
done

if [ "$GCC_INCLUDE" = "" ] 
then
	echo "GCC_INCLUDE was not set, setting to /usr/include"
	export GCC_INCLUDE=/usr/include
fi

if [ "$GCC_BIN" = "" ] 
then
	echo "GCC_BIN was not set, setting to /usr/local/bin"
	export GCC_BIN=/usr/local/bin
fi

if [ "$GCC_LIB" = "" ] 
then
	echo "GCC_LIB was not set, setting to /usr/local/lib"
	export GCC_LIB=/usr/local/lib
fi

PATH=$GCC_BIN:$PATH
INCLUDE=$GCC_INCLUDE:$INCLUDE
LIB=$GCC_LIB:$LIB

bash $ANT_HOME/bin/ant $DEBUG_ANT_FLAG $DEBUG_BUILD $RELEASE_BUILD $USE_GPP $1 $2 $3 $4 $5 $6 $7 $8 $9
