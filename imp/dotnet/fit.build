<?xml version="1.0"?>
<project name="fit" basedir="." default="all">
	<description>fit - Framework for integrated test</description>

	<property name="root.dir" value="../.." />	
	<property name="doc.dir" value="${root.dir}\examples" />
	<property name="source.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="bin.dir" value="${build.dir}" />
	<property name="tools.dir" value="tools" />
	<property name="report.dir" value="report" />
	<property name="fit_dll.path" value="${bin.dir}\fit.dll" />
	<property name="nunit.path" value="${tools.dir}\nunit\nunitconsole.exe" />
	<property name="framework_test.class" value="fit.FrameworkTest" />
	<property name="row_fixture_test.class" value="fit.RowFixtureTest" />
	
	<target name="build_dir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${bin.dir}" />
	</target>
	
	<target name="report_dir">
		<mkdir dir="${report.dir}" />
	</target>
	
	<target name="compile_fit" depends="build_dir">
		<csc target="library" output="${fit_dll.path}" debug="true">
			<sources basedir="${source.dir}\fit">
				<includes name="**\*.cs" />
				<excludes name="FileRunnerExe.cs" />
				<excludes name="WikiRunner.cs" />
			</sources>
			<references>
				<includes name="${lib.dir}\**\*.dll" />
			</references>
		</csc>
	</target>
	
	<target name="compile_eg" depends="build_dir, compile_fit">
		<csc target="library" output="${bin.dir}\eg.dll" debug="true">
			<sources basedir="${source.dir}\eg">
				<includes name="**\*.cs" />
			</sources>
			<references>
				<includes name="${lib.dir}\*.dll" />
				<includes name="${fit_dll.path}" />
			</references>
		</csc>
	</target>
	
	<target name="compile_runFile" depends="build_dir, compile_fit">
		<csc target="exe" output="${bin.dir}\runFile.exe" debug="true">
			<sources basedir="${source.dir}\fit">
				<includes name="FileRunnerExe.cs" />
			</sources>
			<references>
				<includes name="${lib.dir}\*.dll" />
				<includes name="${fit_dll.path}" />
			</references>
		</csc>
	</target>
	
	<target name="compile_runWiki" depends="build_dir, compile_fit">
		<csc target="exe" output="${bin.dir}\runWiki.exe" debug="true">
			<sources basedir="${source.dir}\fit">
				<includes name="WikiRunner.cs" />
			</sources>
			<references>
				<includes name="${lib.dir}\*.dll" />
				<includes name="${fit_dll.path}" />
			</references>
		</csc>
	</target>
	
	<target name="build" depends="compile_fit, compile_runFile, compile_runWiki, compile_eg" description="Build project">
	</target>

	<target name="run" depends="build, report_dir" description="Run fit on the examples">
		<exec program="${build.dir}\runFile" commandline="${doc.dir}\arithmetic.html ${report.dir}\arithmetic.html" failonerror="false" />
		<exec program="${build.dir}\runWiki" commandline="${doc.dir}\CalculatorExample.html ${report.dir}\CalculatorExample.html" failonerror="false" />
		<exec program="${build.dir}\runWiki" commandline="${doc.dir}\MusicExample.html ${report.dir}\MusicExample.html" failonerror="false" />
	</target>

	<target name="test" depends="build" description="Test fit">
		<exec program="${nunit.path}" commandline="${row_fixture_test.class},${fit_dll.path}" />
		<exec program="${nunit.path}" commandline="${framework_test.class},${fit_dll.path}" />
	</target>
	
	<target name="all" depends="build, test, run" description="Build, test, and run fit">
	</target>
	
	<target name="clean" description="Deletes all build files">
		<!-- Hack to avoid failure if dir not there -->
		<mkdir dir="${build.dir}" failonerror="false" />
		<delete dir="${build.dir}" />
		<delete>
			<fileset>
				<includes name="**/bin/**/*" />
				<includes name="**/obj/**/*" />
			</fileset>
		</delete>
	</target>
</project>
